name: Package Chart

env:
  MERGE_BRANCH: gh-pages
  PR_LABEL: pr/release/robot_update_githubpage
  PR_REVIWER: weizhoublue

on:
  pull_request:
    paths:
      - "charts/**"
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      project:
        description: 'project name for release'
        required: false
      ref:
        description: 'branch name, tag or sha'
        required: true
        default: main

permissions: write-all

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get_ref.outputs.tag }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by self workflow_dispatch"
              if ${{ github.event.inputs.project == '' }} ; then
                  echo ::set-output name=project::all
              else
                  echo ::set-output name=project::${{ github.event.inputs.ref }}
              fi
              # release to github pages
              echo ::set-output name=release::true
              echo ::set-output name=tag::${{ github.event.inputs.ref }}
          elif ${{ github.event_name == 'push' }} ; then
              echo "call by push"
              echo ::set-output name=project::all
              # release to github pages
              echo ::set-output name=release::true
              echo ::set-output name=tag::${{ github.sha }}
          elif ${{ github.event_name == 'pull_request_target' }} ; then
              echo "trigger by pull_request_target"
              echo ::set-output name=project::all
              # release to github pages
              echo ::set-output name=release::false
              echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
          fi

      # some event, the tag is not sha, so checkout it and get sha
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ steps.get_ref.outputs.tag }}

      - name: Result Ref
        id: result
        run: |
          ref=$( git show -s --format='format:%H')
          echo ::set-output name=ref::${ref}

      - name: Set up Helm
        uses: azure/setup-helm@v3.3

      - name: Install helm-schema-gen
        run: |
          helm plugin install https://github.com/karuppiah7890/helm-schema-gen.git

      - name: package chart
        run: |
          if ${{ steps.get_ref.outputs.project == 'all' }} || ${{ steps.get_ref.outputs.project == '' }} ; then
              make 
          else
              make -e PROJECT=${{ steps.get_ref.outputs.project }}
          fi

      - name: prepare for artifact
        run: |
          mkdir _upload
          ALL_TAZ=`find ./build  -maxdepth 2 -name "*.tgz" `
          for ITEM in $ALL_TAZ  ; do
              cp $ITEM   _upload
          done

      - name: Upload chart artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: charts
          path: _upload
          retention-days: 1

      - name: prepare for release
        if: steps.get_ref.outputs.release == 'true'
        run: |
          mkdir _charts
          ALL_PROJECT=`ls build`
          for ITEM in $ALL_PROJECT ; do
              cp -rf build/${ITEM}/${ITEM} _charts/${ITEM}
          done
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # publish to github pages
      # https://github.com/helm/chart-releaser-action
      - name: Run chart-releaser
        if: steps.get_ref.outputs.release == 'true'
        uses: helm/chart-releaser-action@v1.4.0
        with:
          charts_dir: _charts
        env:
          CR_TOKEN: "${{ secrets.WELAN_PAT }}"

  # update /index.yaml in the target branch
  update_githubpage:
    runs-on: ubuntu-latest
    needs: [package]
    if: ${{ needs.package.outputs.submit == 'true' }}
    steps:
      - name: Get Base Chart URL
        id: get_base_url
        run: |
          name=${{ github.repository }}
          proj=${name#*/}
          url=https://${{ github.repository_owner }}.github.io/${proj}
          echo "::set-output name=url::${url}"

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.MERGE_BRANCH }}
          persist-credentials: "true"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: charts
          path: ./

      - name: Update Chart Yaml
        run: |
          helm repo index  ./  --url ${{ steps.get_base_url.outputs.url }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4.0.4
        with:
          title: "robot Update chart to branch ${{ env.MERGE_BRANCH }} "
          commit-message: "robot Update chart from ${{ needs.package.outputs.ref }} to branch ${{ env.MERGE_BRANCH }} "
          branch-suffix: timestamp
          branch: robot/update_chart
          delete-branch: true
          base: ${{ env.MERGE_BRANCH }}
          signoff: true
          token: ${{ secrets.WELAN_PAT }}
          labels: ${{ env.PR_LABEL }}
          reviewers: ${{ env.PR_REVIWER }}
