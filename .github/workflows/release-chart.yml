name: Release Chart

env:
  MERGE_BRANCH: gh-pages
  PR_LABEL: pr/release/robot_update_githubpage
  PR_REVIWER: weizhoublue
  HARBOR_PROJECT: addon

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+
  workflow_dispatch:
    inputs:
      project:
        description: 'project name.[ leave empty for all projects]'
        required: false
      ref:
        description: 'branch name, tag or sha'
        required: true
        default: main
      daocloud:
        description: 'push to daocloud repo'
        required: true
        type: boolean
        default: true

permissions: write-all

jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.get_ref.outputs.tag }}
      release: ${{ steps.get_ref.outputs.release }}
    steps:
      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by self workflow_dispatch"
              if ${{ github.event.inputs.project == '' }} ; then
                  echo ::set-output name=project::all
              else
                  echo ::set-output name=project::${{ github.event.inputs.ref }}
              fi
              # release to github pages
              echo ::set-output name=release::${{ github.event.inputs.daocloud }}
              echo ::set-output name=tag::${{ github.event.inputs.ref }}
          elif ${{ github.event_name == 'push' }} ; then
              echo "call by tag push"
              echo ::set-output name=project::all
              echo ::set-output name=release::true
              # release to github pages
              echo ::set-output name=tag::${{ github.sha }}
          else
            echo "unexpected event: ${{ github.event_name }}"
            exit 1
          fi

      # some event, the tag is not sha, so checkout it and get sha
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ steps.get_ref.outputs.tag }}

      - name: Result Ref
        id: result
        run: |
          ref=$( git show -s --format='format:%H')
          echo ::set-output name=ref::${ref}

      - name: Set up Helm
        uses: azure/setup-helm@v3.3

      - name: package chart
        run: |
          ROOT_DIR=`pwd`
          project_list=${{ steps.get_ref.outputs.project }}
          if ${{ steps.get_ref.outputs.project == 'all' }} || ${{ steps.get_ref.outputs.project == '' }} ; then
              project_list=`ls charts`
          fi
          mkdir _upload
          cd _upload
          for ITEM in $project_list ; do
              [ ! -d "${ROOT_DIR}/charts/${ITEM}/${ITEM}" ] && echo "error, find to find project $ITEM in /charts" && exit 1
              helm package ${ROOT_DIR}/charts/${ITEM}/${ITEM}
          done

      - name: Upload chart artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: charts
          path: _upload
          retention-days: 1

      - name: Install helm-push
        if: ${{ steps.get_ref.outputs.release == 'true' }}
        run: |
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: push to daocloud
        if: ${{ steps.get_ref.outputs.release == 'true' }}
        run: |
          helm repo add harborrepo  https://${{ secrets.DAOCLOUD_HARBOR_URL }}/chartrepo/${{ env.HARBOR_PROJECT }} --username=${{ secrets.DAOCLOUD_HARBOR_USER }}  --password=${{ secrets.DAOCLOUD_HARBOR_PASSWORD }} 
          cd _upload
          LIST=`ls *.tgz`
          for ITEM in $LIST ; do
              helm cm-push ${ITEM}  harborrepo  --username=${{ secrets.DAOCLOUD_HARBOR_USER }}  --password=${{ secrets.DAOCLOUD_HARBOR_PASSWORD }}
              (($?!=0)) && echo "push $ITEM to ${{ env.HARBOR_PROJECT }} of daocloud chart repo " && exit 1
              echo "push $ITEM to ${{ env.HARBOR_PROJECT }} of daocloud chart repo"
          done

  # update /index.yaml in the target branch
  update_githubpage:
    runs-on: ubuntu-latest
    needs: [package]
    steps:
      - name: Get Base Chart URL
        id: get_base_url
        run: |
          name=${{ github.repository }}
          proj=${name#*/}
          url=https://${{ github.repository_owner }}.github.io/${proj}
          echo "::set-output name=url::${url}"

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.MERGE_BRANCH }}
          persist-credentials: "true"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: charts
          path: ./

      - name: Update Chart Yaml
        run: |
          ls
          helm repo index  ./  --url ${{ steps.get_base_url.outputs.url }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4.0.4
        with:
          title: "robot Update chart to branch ${{ env.MERGE_BRANCH }} "
          commit-message: "robot Update chart from ${{ needs.package.outputs.ref }} to branch ${{ env.MERGE_BRANCH }} "
          branch-suffix: timestamp
          branch: robot/update_chart
          delete-branch: true
          base: ${{ env.MERGE_BRANCH }}
          signoff: true
          token: ${{ secrets.WELAN_PAT }}
          labels: ${{ env.PR_LABEL }}
          reviewers: ${{ env.PR_REVIWER }}
