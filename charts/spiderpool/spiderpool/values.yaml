# child values
spiderpool:
  # Default values for spiderpool.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.
  
  ## @section Global parameters
  ##
  global:
    ## @param global.imageRegistryOverride Global Docker image registry
    imageRegistryOverride: ""
  
    ## @param global.nameOverride instance name
    ## default spiderpool
    nameOverride: ""
  
    ## @param global.clusterDnsDomain cluster dns domain
    clusterDnsDomain: "cluster.local"
  
    ## @param global.commonAnnotations Annotations to add to all deployed objects
    commonAnnotations: {}
  
    ## @param global.commonLabels Labels to add to all deployed objects
    commonLabels: {}
    #  label1: v1
    #  labele: v2
  
    ## @param global.ipamBinHostPath the host path of the IPAM plugin directory.
    ipamBinHostPath: /opt/cni/bin
  
    ## @param global.ipamUNIXSocketHostPath the host path of unix domain socket for ipam plugin
    ipamUNIXSocketHostPath: /var/run/spidernet/spiderpool.sock
  
    ## @param global.configName the configmap name
    configName: "spiderpool-conf"
  
  ## @section feature parameters
  feature:
    ## @param feature.enableIPv4 enable ipv4
    enableIPv4: true
  
    ## @param feature.enableIPv6 enable ipv6
    enableIPv6: true
  
    ## @param feature.networkMode the network mode
    networkMode: legacy
  
    ## @param feature.enableStatefulSet the network mode
    enableStatefulSet: true
  
    gc:
      ## @param feature.gc.enabled enable retrieve IP in spiderippool CR
      enabled: true
  
      GcDeletingTimeOutPod:
        ## @param feature.gc.GcDeletingTimeOutPod.enabled enable retrieve IP for the pod who times out of deleting graceful period
        enabled: true
  
        ## @param feature.gc.GcDeletingTimeOutPod.delay the gc delay seconds after the pod times out of deleting graceful period
        delay: 0
  
  
  ## @section clusterDefaultPool parameters
  ##
  clusterDefaultPool:
    ## @param clusterDefaultPool.installIPv4IPPool install ipv4 spiderpool instance
    installIPv4IPPool: false
  
    ## @param clusterDefaultPool.installIPv6IPPool install ipv6 spiderpool instance
    installIPv6IPPool: false
  
    ## @param clusterDefaultPool.ipv4IPPoolName the name of ipv4 spiderpool instance
    ipv4IPPoolName: "default-v4-ippool"
  
    ## @param clusterDefaultPool.ipv6IPPoolName the name of ipv6 spiderpool instance
    ipv6IPPoolName: "default-v6-ippool"
  
    ## @param clusterDefaultPool.ipv4Subnet the subnet of ipv4 spiderpool instance
    ipv4Subnet: ""
  
    ## @param clusterDefaultPool.ipv6Subnet the subnet of ipv6 spiderpool instance
    ipv6Subnet: ""
  
    ## @param clusterDefaultPool.ipv4IPRanges the available IP of ipv4 spiderpool instance
    ipv4IPRanges: []
  
    ## @param clusterDefaultPool.ipv6IPRanges the available IP of ipv6 spiderpool instance
    ipv6IPRanges: []
  
  ## @section spiderpoolAgent parameters
  ##
  spiderpoolAgent:
    ## @param spiderpoolAgent.name the spiderpoolAgent name
    name: "spiderpool-agent"
  
    ## @param spiderpoolAgent.binName the binName name of spiderpoolAgent
    binName: "spiderpool-agent"
  
    image:
      ## @param spiderpoolAgent.image.registry the image registry of spiderpoolAgent
      registry: ghcr.io
  
      ## @param spiderpoolAgent.image.repository the image repository of spiderpoolAgent
      repository: spidernet-io/spiderpool/spiderpool-agent
  
      ## @param spiderpoolAgent.image.pullPolicy the image pullPolicy of spiderpoolAgent
      pullPolicy: IfNotPresent
  
      ## @param spiderpoolAgent.image.digest the image digest of spiderpoolAgent, which takes preference over tag
      digest: ""
  
      ## @param spiderpoolAgent.image.tag the image tag of spiderpoolAgent, overrides the image tag whose default is the chart appVersion.
      tag: v0.0.10
  
      ## @param spiderpoolAgent.image.imagePullSecrets the image imagePullSecrets of spiderpoolAgent
      imagePullSecrets: []
      # - name: "image-pull-secret"
  
    ## @skip spiderpoolAgent.nodeSelector.kubernetes.io/os
    nodeSelector:
      kubernetes.io/os: linux
  
    serviceAccount:
      ## @param spiderpoolAgent.serviceAccount.create create the service account for the spiderpoolAgent
      create: true
      ## @param spiderpoolAgent.serviceAccount.annotations the annotations of spiderpoolAgent service account
      annotations: {}
  
    ## @skip spiderpoolAgent.updateStrategy.rollingUpdate.maxUnavailable
    ## @skip spiderpoolAgent.updateStrategy.type
    updateStrategy:
      rollingUpdate:
        maxUnavailable: 2
      type: RollingUpdate
  
    service:
      ## @param spiderpoolAgent.service.annotations the annotations for spiderpoolAgent service
      annotations: {}
      ## @param spiderpoolAgent.service.type the type for spiderpoolAgent service
      type: ClusterIP
  
    ## @skip spiderpoolAgent.tolerations
    # --  Node tolerations
    # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
  
    ## @param spiderpoolAgent.priorityClassName the priority Class Name for spiderpoolAgent
    priorityClassName: "system-node-critical"
  
    ## @param spiderpoolAgent.affinity the affinity of spiderpoolAgent
    affinity: {}
  
    ## @param spiderpoolAgent.extraArgs the additional arguments of spiderpoolAgent container
    extraArgs: []
  
    ## @param spiderpoolAgent.extraEnv the additional environment variables of spiderpoolAgent container
    extraEnv: []
  
    ## @param spiderpoolAgent.extraVolumes the additional volumes of spiderpoolAgent container
    extraVolumes: []
  
    ## @param spiderpoolAgent.extraVolumeMounts the additional hostPath mounts of spiderpoolAgent container
    extraVolumeMounts: []
  
    ## @param spiderpoolAgent.podAnnotations the additional annotations of spiderpoolAgent pod
    podAnnotations: {}
  
    ## @param spiderpoolAgent.podLabels the additional label of spiderpoolAgent pod
    podLabels: {}
  
    resources:
      ## @param spiderpoolAgent.resources.limits.cpu the cpu limit of spiderpoolAgent pod
      ## @param spiderpoolAgent.resources.limits.memory the memory limit of spiderpoolAgent pod
      ## @param spiderpoolAgent.resources.requests.cpu the cpu requests of spiderpoolAgent pod
      ## @param spiderpoolAgent.resources.requests.memory the memory requests of spiderpoolAgent pod
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
    ## @param spiderpoolAgent.securityContext the security Context of spiderpoolAgent pod
    securityContext: {}
    # runAsUser: 0
  
    ## @param spiderpoolAgent.httpPort the http Port for spiderpoolAgent, for health checking
    httpPort: 5710
  
    healthChecking:
      startupProbe:
        ## @param spiderpoolAgent.healthChecking.startupProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
        failureThreshold: 60
        ## @param spiderpoolAgent.healthChecking.startupProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
        periodSeconds: 2
  
      livenessProbe:
        ## @param spiderpoolAgent.healthChecking.livenessProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
        failureThreshold: 6
        ## @param spiderpoolAgent.healthChecking.livenessProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
        periodSeconds: 10
  
      readinessProbe:
        ## @param spiderpoolAgent.healthChecking.readinessProbe.failureThreshold the failure threshold of startup probe for spiderpoolAgent health checking
        failureThreshold: 3
        ## @param spiderpoolAgent.healthChecking.readinessProbe.periodSeconds the period seconds of startup probe for spiderpoolAgent health checking
        periodSeconds: 10
  
    prometheus:
      ## @param spiderpoolAgent.prometheus.enabled enable spiderpool agent to collect metrics
      enabled: false
  
      ## @param spiderpoolAgent.prometheus.port the metrics port of spiderpool agent
      port: 5711
  
      serviceMonitor:
        ## @param spiderpoolAgent.prometheus.serviceMonitor.install install serviceMonitor for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolAgent.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolAgent.prometheus.serviceMonitor.annotations the additional annotations of spiderpoolAgent serviceMonitor
        annotations: {}
  
        ## @param spiderpoolAgent.prometheus.serviceMonitor.labels the additional label of spiderpoolAgent serviceMonitor
        labels: { "operator.insight.io/managed-by": "insight" }
  
      prometheusRule:
        ## @param spiderpoolAgent.prometheus.prometheusRule.install install prometheusRule for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolAgent.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolAgent.prometheus.prometheusRule.annotations the additional annotations of spiderpoolAgent prometheusRule
        annotations: {}
  
        ## @param spiderpoolAgent.prometheus.prometheusRule.labels the additional label of spiderpoolAgent prometheusRule
        labels: { "operator.insight.io/managed-by": "insight" }
  
      grafanaDashboard:
        ## @param spiderpoolAgent.prometheus.grafanaDashboard.install install grafanaDashboard for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolAgent.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolAgent.prometheus.grafanaDashboard.annotations the additional annotations of spiderpoolAgent grafanaDashboard
        annotations: {}
  
        ## @param spiderpoolAgent.prometheus.grafanaDashboard.labels the additional label of spiderpoolAgent grafanaDashboard
        labels: { "operator.insight.io/managed-by": "insight" }
  
    debug:
      ## @param spiderpoolAgent.debug.logLevel the log level of spiderpool agent [debug, info, warn, error, fatal, panic]
      logLevel: "info"
      ## @param spiderpoolAgent.debug.gopsPort the gops port of spiderpool agent
      gopsPort: 5712
  
  ## @section spiderpoolController parameters
  ##
  spiderpoolController:
    ## @param spiderpoolController.name the spiderpoolController name
    name: "spiderpool-controller"
  
    ## @param spiderpoolController.replicas the replicas number of spiderpoolController pod
    replicas: 1
  
    ## @param spiderpoolController.binName the binName name of spiderpoolController
    binName: "spiderpool-controller"
  
    ## @param spiderpoolController.hostnetwork enable hostnetwork mode of spiderpoolController pod. Notice, if no CNI available before spiderpool installation, must enable this
    hostnetwork: true
  
    image:
      ## @param spiderpoolController.image.registry the image registry of spiderpoolController
      registry: ghcr.io
  
      ## @param spiderpoolController.image.repository the image repository of spiderpoolController
      repository: spidernet-io/spiderpool/spiderpool-controller
  
      ## @param spiderpoolController.image.pullPolicy the image pullPolicy of spiderpoolController
      pullPolicy: IfNotPresent
  
      ## @param spiderpoolController.image.digest the image digest of spiderpoolController, which takes preference over tag
      digest: ""
  
      ## @param spiderpoolController.image.tag the image tag of spiderpoolController, overrides the image tag whose default is the chart appVersion.
      tag: v0.0.10
  
      ## @param spiderpoolController.image.imagePullSecrets the image imagePullSecrets of spiderpoolController
      imagePullSecrets: []
      # - name: "image-pull-secret"
  
    ## @skip spiderpoolController.nodeSelector.kubernetes.io/os
    nodeSelector:
      kubernetes.io/os: linux
  
    serviceAccount:
      ## @param spiderpoolController.serviceAccount.create create the service account for the spiderpoolController
      create: true
      ## @param spiderpoolController.serviceAccount.annotations the annotations of spiderpoolController service account
      annotations: {}
  
    service:
      ## @param spiderpoolController.service.annotations the annotations for spiderpoolController service
      annotations: {}
      ## @param spiderpoolController.service.type the type for spiderpoolController service
      type: ClusterIP
  
    ## @skip spiderpoolController.tolerations
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/pid-pressure
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/unschedulable
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
  
    ## @param spiderpoolController.priorityClassName the priority Class Name for spiderpoolController
    priorityClassName: "system-node-critical"
  
    ## @param spiderpoolController.affinity the affinity of spiderpoolController
    affinity: {}
  
    ## @param spiderpoolController.extraArgs the additional arguments of spiderpoolController container
    extraArgs: []
  
    ## @param spiderpoolController.extraEnv the additional environment variables of spiderpoolController container
    extraEnv: []
  
    ## @param spiderpoolController.extraVolumes the additional volumes of spiderpoolController container
    extraVolumes: []
      # - name: test-val
      #   mountPath: /host/tmp
  
    ## @param spiderpoolController.extraVolumeMounts the additional hostPath mounts of spiderpoolController container
    extraVolumeMounts: []
      # - name: test-val
      #   mountPath: /tmp
  
    ## @param spiderpoolController.podAnnotations the additional annotations of spiderpoolController pod
    podAnnotations: {}
      # test: 100
  
    ## @param spiderpoolController.podLabels the additional label of spiderpoolController pod
    podLabels: {}
  
    ## @param spiderpoolController.securityContext the security Context of spiderpoolController pod
    securityContext: {}
    # runAsUser: 0
  
    resources:
      ## @param spiderpoolController.resources.limits.cpu the cpu limit of spiderpoolController pod
      ## @param spiderpoolController.resources.limits.memory the memory limit of spiderpoolController pod
      ## @param spiderpoolController.resources.requests.cpu the cpu requests of spiderpoolController pod
      ## @param spiderpoolController.resources.requests.memory the memory requests of spiderpoolController pod
      limits:
        cpu: 500m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 128Mi
  
    podDisruptionBudget:
      ## @param spiderpoolController.podDisruptionBudget.enabled enable podDisruptionBudget for spiderpoolController pod
      enabled: false
  
      ## @param spiderpoolController.podDisruptionBudget.minAvailable minimum number/percentage of pods that should remain scheduled.
      minAvailable: 1
  
    ## @param spiderpoolController.httpPort the http Port for spiderpoolController, for health checking and http service
    httpPort: 5720
  
    healthChecking:
      startupProbe:
        ## @param spiderpoolController.healthChecking.startupProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
        failureThreshold: 30
  
        ## @param spiderpoolController.healthChecking.startupProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
        periodSeconds: 2
  
      livenessProbe:
        ## @param spiderpoolController.healthChecking.livenessProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
        failureThreshold: 6
  
        ## @param spiderpoolController.healthChecking.livenessProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
        periodSeconds: 10
  
      readinessProbe:
        ## @param spiderpoolController.healthChecking.readinessProbe.failureThreshold the failure threshold of startup probe for spiderpoolController health checking
        failureThreshold: 3
  
        ## @param spiderpoolController.healthChecking.readinessProbe.periodSeconds the period seconds of startup probe for spiderpoolController health checking
        periodSeconds: 10
  
    ## @param spiderpoolController.webhookPort the http port for spiderpoolController webhook
    webhookPort: 5722
  
    prometheus:
      ## @param spiderpoolController.prometheus.enabled enable spiderpool Controller to collect metrics
      enabled: false
  
      ## @param spiderpoolController.prometheus.port the metrics port of spiderpool Controller
      port: 5721
  
      serviceMonitor:
        ## @param spiderpoolController.prometheus.serviceMonitor.install install serviceMonitor for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolController.prometheus.serviceMonitor.namespace the serviceMonitor namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolController.prometheus.serviceMonitor.annotations the additional annotations of spiderpoolController serviceMonitor
        annotations: {}
  
        ## @param spiderpoolController.prometheus.serviceMonitor.labels the additional label of spiderpoolController serviceMonitor
        labels: { "operator.insight.io/managed-by": "insight" }
  
      prometheusRule:
        ## @param spiderpoolController.prometheus.prometheusRule.install install prometheusRule for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolController.prometheus.prometheusRule.namespace the prometheusRule namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolController.prometheus.prometheusRule.annotations the additional annotations of spiderpoolController prometheusRule
        annotations: {}
  
        ## @param spiderpoolController.prometheus.prometheusRule.labels the additional label of spiderpoolController prometheusRule
        labels: { "operator.insight.io/managed-by": "insight" }
  
      grafanaDashboard:
        ## @param spiderpoolController.prometheus.grafanaDashboard.install install grafanaDashboard for spiderpool agent. This requires the prometheus CRDs to be available
        install: false
  
        ## @param spiderpoolController.prometheus.grafanaDashboard.namespace the grafanaDashboard namespace. Default to the namespace of helm instance
        namespace: ""
  
        ## @param spiderpoolController.prometheus.grafanaDashboard.annotations the additional annotations of spiderpoolController grafanaDashboard
        annotations: {}
  
        ## @param spiderpoolController.prometheus.grafanaDashboard.labels the additional label of spiderpoolController grafanaDashboard
        labels: { "operator.insight.io/managed-by": "insight" }
  
    debug:
      ## @param spiderpoolController.debug.logLevel the log level of spiderpool Controller [debug, info, warn, error, fatal, panic]
      logLevel: "info"
  
      ## @param spiderpoolController.debug.gopsPort the gops port of spiderpool Controller
      gopsPort: 5724
  
    ## TLS configuration for webhook
    tls:
      ## @param spiderpoolController.tls.method the method for generating TLS certificates. [ provided , certmanager ]
      ## - provided:     provide all certificates by helm options
      ## - certmanager:  This method use cert-manager to generate & rotate certificates.
      method: provided
  
      ## @param spiderpoolController.tls.secretName the secret name for storing TLS certificates
      secretName: "spiderpool-controller-server-certs"
  
      ## for certmanager method
      certmanager:
        ## @param spiderpoolController.tls.certmanager.certValidityDuration generated certificates validity duration in days for 'certmanager' method
        certValidityDuration: 365
  
        ## @param spiderpoolController.tls.certmanager.issuerName issuer name of cert manager 'certmanager'. If not specified, a CA issuer will be created.
        issuerName: ""
  
        ## @param spiderpoolController.tls.certmanager.extraDnsNames extra DNS names added to certificate when it's auto generated
        extraDnsNames: []
  
        ## @param spiderpoolController.tls.certmanager.extraIPAddresses extra IP addresses added to certificate when it's auto generated
        extraIPAddresses: []
  
      ## for provided method
      provided:
        ## @param spiderpoolController.tls.provided.tlsCert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEekNDQXZlZ0F3SUJBZ0lVYWQ0V2pHdVFWN1UxUkRWUEh4ZTgxVUd6Z05vd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NsdHpMYXhva244ZFphZHRMWnlCc2FKS2pUTURxazBQaQp4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMi95eHgyUlk5QlU4L0pka1pLdmw3CjV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DSVlPMEtPbktRT0ZheHlndWdUOWMKVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cENZYlBmRmxqNTc2a3BYYkFVUWxNQgpsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUmFQWGxwWkJSQmZISnZzYVNUT0pGCnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJdVE3YWVMa2hBZ01CQUFHamdnRWYKTUlJQkd6QUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBZ1lJS3dZQkJRVUhBd0V3Z2FFR0ExVWRFUVNCbVRDQmxvSVZjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5CmdpRnpjR2xrWlhKd2IyOXNMV052Ym5SeWIyeHNaWEl1YTNWaVpTMXplWE4wWlcyQ0pYTndhV1JsY25CdmIyd3QKWTI5dWRISnZiR3hsY2k1cmRXSmxMWE41YzNSbGJTNXpkbU9DTTNOd2FXUmxjbkJ2YjJ3dFkyOXVkSEp2Ykd4bApjaTVyZFdKbExYTjVjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBZEJnTlZIUTRFRmdRVXJzQ201d2hGCjdKY3lkSHZ6djQveDk0T2lVbjR3SHdZRFZSMGpCQmd3Rm9BVTdEOW1VUTVHbWQ3emVNWWdLKzhocUpVbFB3SXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpJNkJMOTdxN2dSamNoSHZyYzlpY1ZhUFNOYXVUQlUxSkduUFlxcwpZdm5KMUwrWFM0UWxacFVkWlNqRWd4am9uY1FFS21HRWhEWGNHZGxwYk1CbWoxdVh3bjBNQXVxOXNDSHR0elIyCkdRb1dKOVJJVnFyeTkrbEtBNXpMenUwL2VBS2U3SFRLejNrWS9xL296b0xFNlNxcTh2ZWJhdU5YRThkbW5tZ0YKdkEzNU9KOXRlZ1oraGJsZG1MWEhoeVo3a0FVdEpMcnhmRERuVVNWb2trL1FmcEs0KytOb2NTdExQU1FqUE40RQpKeCttRzRIbnVlcWpEWHkwT3hrYW90d2xMMWMrY1dleDY1Yi9BK2w3WEVYZXgycytocnJLd2FINFMvM0o0dTlsCm1CTEd5aENBTllJZ0JZSnRXMmZPR05qMS9GTkM3bVMwNmdyRVNnSkF5eG1ZbU9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        ## @param spiderpoolController.tls.provided.tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ2NsdHpMYXhva244ZFoKYWR0TFp5QnNhSktqVE1EcWswUGl4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMgoveXh4MlJZOUJVOC9KZGtaS3ZsNzV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DCklZTzBLT25LUU9GYXh5Z3VnVDljVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cEMKWWJQZkZsajU3NmtwWGJBVVFsTUJsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUgphUFhscFpCUkJmSEp2c2FTVE9KRnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJCnVRN2FlTGtoQWdNQkFBRUNnZ0VBRGU5ekdOQ2dQcVY2Mm9uaGVvcTVSNkhnSXVqcXU0clMzaDlXOUxubWJoV00KVk4yci9KV085SEYwWm5jejkybzZTOE8yMXlpNGFKMDFuVXZhTmJZMGFodkxNS1hQOWVodGZzbW05d2hwWEwxbAplUmJOZlBka0VBOWJLV3plWG5EUXhwV2pQUldrd2tjcGNIQWJ4aHNQVmZEWTNVNUovM3dyR2xqVWJLLzdIK1hnCmpjd3IzZGZGTlZ0bUtvVXVjOVkxejRGUXhpYjEvSmZKeFNXaXd4S1piR0ZwNHpORG0wVTlpL2NscnNnQkxDaUUKNUNuMy94QUJYN0hvWVhvM1VCb1pBdzYweTZkNk8yeW1Zc1cyVlhqVE13NngvOGZyYTBDSWI2RDcyNEtxSDE5WApiRStQMnNaT09uNFdnQ2djc05NcXVTS1ZXTTlqY2JTT1pZZFVYYXJ3ZlFLQmdRRFp6c3I1QVdRUTVTUVozdzRTCnViampvQ3B6Sk5CWHUydlRnY2ZZQ1UyVGlVcnJibktLdFNpNFkwVUs3ZGg1UjBNNXl4azdmcVlsWTBZcFM5UjEKUWdzOUsxYTBOUWlzY1g5ZUh6emdnb2dKU1VVYWkrMWxCckFBSjNYekRJVXFLVWJIalZmSUUxU0FKWUNYYnJESwoxUEkxYk9LV0tXcys2RUtsTGNjYXovL1RPd0tCZ1FDNERBWWhBbDZwYXJIVnhqZzloNUtYYmFUZGhOb2lmcEFCCmo2Z29SQm56dEZIRmFlM0p2aW8wSWlDQ2thTUJDOGlDSlV4cFZEbWJjTVZxM0JETWN5Ty9rUTVkcjQzWThHMTAKUVZyZWU3ZkVvZDM0QWtJaVRXT1NpRmJiRHZHekM4cWFkcG5JNGNOd0tFSlVSbFNVTGtrUXdSOTF5dCtOM1ZMZwp3S3BELy9mblV3S0JnUUROK1JsSlVWOW4rc21oRGFjcFhpalNXZXpLNXMxL3FlWFdKcXp1U0Izc243RVI0MmkrCmM0TUduQm4ycytZN0NvRXdiamgyWXRhTUZNMk0wQUVpd2tvT2xxVnYxWmRXUEI3T3k0dXVaTUp3eGJGcjRWZW0KYWlTV2dMcXlGZXo0YWdCZFJmVDFhQkpJL1M0V0JyOTVrTmRjWHBRSW5US21VczV6bGs3cnREZWhjUUtCZ0VIcgpSSkswRjVXVWVtZDMzSkxsS1BNRnVXUUIvbU1XYzV1cmlXNEtua1QwVThsaVhHSENzN2tDZENSdjV6TXJ0a0F1Ci9jUkgvMjRXSVE5YURNWTlneE5NOEJsTUZJRWI5QWdNbEhCVlhZZVc5anFyREdiZTB3Z2J2d2dzdlJNRTZTY1QKelpidWphSnhPUGlZVEJqYXp4NnFIUXVDZ3psN2lRQ280Uk1EN2hXekFvR0JBTE1WZHRxQStOMzVoeXRBNXorUQpkeHdYelhIVXg0cUJZOHgrdnlHbkp6NHlRTDEvZ1ZNUldqRmN0QmhzOUo0UEZ0b3NhMWRqRzhTSTlqVktHS29QCmVZSExtZloxR25VQ2l6TWxIU01FVCszSVRVYnJjZkl0aDdqdkMwVkl1SXJZRGtrLzF3SElOWnJZL0xxWVR2ckwKTnFTZ09FRGdmbHJPRjlUVWNlanlyOHNxCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
        ## @param spiderpoolController.tls.provided.tlsCa: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lVVHN5WmFPenJuTXQxbU02bUxKaFVjNHRYejFZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NtcHNIY1RBbjdVMGkrKzVvajdpZTZGYnlWUFdmQzFvKwoyVkM5ZWlSaHpPYUNrWittdm5Qd3NzdDI3c3FSWGNMKzFxaUpja1BndlNTSUNtemVrekp5NERqSzJzYUMyditoCm5iY25EMlUrVDJJM0E2SFBpaDB4NWhrU2ozQVNxRjNHbGpmbHVoU3RadGZpSGdoUFc4eDVkdFZiQzNoMDRabG4KeTUzNllkKzMrZGV0MHU0Z2pTY2hraFo4MTFab2NFRUVhc0tOeC9DaEUyNG0yRS9LaHRidkRmeGhrKzZhZTdpaApHTGg2amtheVh1VHNNeFg3ZE85N3NLOE9aejBFN0NlN1BQTldYU0VORk04ZGRPaDd0NlpTTG5xaWI2a2tOWWV6CldqYXR2d3JLVFFzTnZkNzdhRk53RW9oMklMYnVjczdTVmNUdyt4RDhnUFN6cUZvWTN4VkZBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJUc1AyWlJEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQWZCZ05WSFNNRUdEQVdnQlRzUDJaUgpEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFmSC9ReGM0ako0b1NSUjFMb2dPVHZxOWxqVC9sS2xFdm0rTWQ2NGNiUUNQeE9Pd0ppQ0dxbDZ3Y2QKSzNPUXZmbFZ6NkdGY0NZUE91b2hDdkhBRmhkVWkxZExIbFVBRHpkNUw4RnNmbFJYdExqQVQ2SWhUemJlb0tzQgpHVWVSaGNrNmlORkVaWUp4NEtMSEJQSG0yRzd3U3Bnb0pqbHp5a1d4Zm14RHlRSUh4WG5NNGZjSm1XT2tYajJpCkNXcm9wSUNtVHFIYy9rdnpIK0t4Z3h1YitLTko4UGd4UWhMNzNWVzZpd2RaYmRkVVVwUUNLTDg1TWRxUy9rdXMKT0kwNjNnZjBkY1VNazNvMFV2d1ZUSURUUStJcmwyM3poWlhZY1ZNdkRSOHROMkNRbjVyYXR5ZkxuYXhxZGdtOApiSGJsS2dRU2ZnL25yajE2Q0ROWnNsS0pHcCtCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        tlsCert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEekNDQXZlZ0F3SUJBZ0lVYWQ0V2pHdVFWN1UxUkRWUEh4ZTgxVUd6Z05vd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NsdHpMYXhva244ZFphZHRMWnlCc2FKS2pUTURxazBQaQp4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMi95eHgyUlk5QlU4L0pka1pLdmw3CjV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DSVlPMEtPbktRT0ZheHlndWdUOWMKVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cENZYlBmRmxqNTc2a3BYYkFVUWxNQgpsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUmFQWGxwWkJSQmZISnZzYVNUT0pGCnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJdVE3YWVMa2hBZ01CQUFHamdnRWYKTUlJQkd6QUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBZ1lJS3dZQkJRVUhBd0V3Z2FFR0ExVWRFUVNCbVRDQmxvSVZjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5CmdpRnpjR2xrWlhKd2IyOXNMV052Ym5SeWIyeHNaWEl1YTNWaVpTMXplWE4wWlcyQ0pYTndhV1JsY25CdmIyd3QKWTI5dWRISnZiR3hsY2k1cmRXSmxMWE41YzNSbGJTNXpkbU9DTTNOd2FXUmxjbkJ2YjJ3dFkyOXVkSEp2Ykd4bApjaTVyZFdKbExYTjVjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBZEJnTlZIUTRFRmdRVXJzQ201d2hGCjdKY3lkSHZ6djQveDk0T2lVbjR3SHdZRFZSMGpCQmd3Rm9BVTdEOW1VUTVHbWQ3emVNWWdLKzhocUpVbFB3SXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpJNkJMOTdxN2dSamNoSHZyYzlpY1ZhUFNOYXVUQlUxSkduUFlxcwpZdm5KMUwrWFM0UWxacFVkWlNqRWd4am9uY1FFS21HRWhEWGNHZGxwYk1CbWoxdVh3bjBNQXVxOXNDSHR0elIyCkdRb1dKOVJJVnFyeTkrbEtBNXpMenUwL2VBS2U3SFRLejNrWS9xL296b0xFNlNxcTh2ZWJhdU5YRThkbW5tZ0YKdkEzNU9KOXRlZ1oraGJsZG1MWEhoeVo3a0FVdEpMcnhmRERuVVNWb2trL1FmcEs0KytOb2NTdExQU1FqUE40RQpKeCttRzRIbnVlcWpEWHkwT3hrYW90d2xMMWMrY1dleDY1Yi9BK2w3WEVYZXgycytocnJLd2FINFMvM0o0dTlsCm1CTEd5aENBTllJZ0JZSnRXMmZPR05qMS9GTkM3bVMwNmdyRVNnSkF5eG1ZbU9NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        tlsKey: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ2NsdHpMYXhva244ZFoKYWR0TFp5QnNhSktqVE1EcWswUGl4clZJTHZVKzF1dG5LZlNaVjg5bFI1aitZMGExdWY0Q2hGbWNHK1dxQXRHMgoveXh4MlJZOUJVOC9KZGtaS3ZsNzV3ZE5QVWNWblRobEZXYStjb3hKdHhMa3pWcFJETFdUR3JrazVQZ3l2TE1DCklZTzBLT25LUU9GYXh5Z3VnVDljVGZXQXdiVU41OTQrZFArMWFQQm9sc0M0WG15Z0lpSGs3Nlc3MXpteXo5cEMKWWJQZkZsajU3NmtwWGJBVVFsTUJsaVJJWWZIUEZ0ZGZmOU5zMG9SQjBlZ0dBY053M0J0d1VNRm9sa0N2YjNSUgphUFhscFpCUkJmSEp2c2FTVE9KRnN3Q3FLMlUvcXFKcnVLRWNPVnN3aHh2THF1TEhBUGJPQXlhS3BPakQ0d3NJCnVRN2FlTGtoQWdNQkFBRUNnZ0VBRGU5ekdOQ2dQcVY2Mm9uaGVvcTVSNkhnSXVqcXU0clMzaDlXOUxubWJoV00KVk4yci9KV085SEYwWm5jejkybzZTOE8yMXlpNGFKMDFuVXZhTmJZMGFodkxNS1hQOWVodGZzbW05d2hwWEwxbAplUmJOZlBka0VBOWJLV3plWG5EUXhwV2pQUldrd2tjcGNIQWJ4aHNQVmZEWTNVNUovM3dyR2xqVWJLLzdIK1hnCmpjd3IzZGZGTlZ0bUtvVXVjOVkxejRGUXhpYjEvSmZKeFNXaXd4S1piR0ZwNHpORG0wVTlpL2NscnNnQkxDaUUKNUNuMy94QUJYN0hvWVhvM1VCb1pBdzYweTZkNk8yeW1Zc1cyVlhqVE13NngvOGZyYTBDSWI2RDcyNEtxSDE5WApiRStQMnNaT09uNFdnQ2djc05NcXVTS1ZXTTlqY2JTT1pZZFVYYXJ3ZlFLQmdRRFp6c3I1QVdRUTVTUVozdzRTCnViampvQ3B6Sk5CWHUydlRnY2ZZQ1UyVGlVcnJibktLdFNpNFkwVUs3ZGg1UjBNNXl4azdmcVlsWTBZcFM5UjEKUWdzOUsxYTBOUWlzY1g5ZUh6emdnb2dKU1VVYWkrMWxCckFBSjNYekRJVXFLVWJIalZmSUUxU0FKWUNYYnJESwoxUEkxYk9LV0tXcys2RUtsTGNjYXovL1RPd0tCZ1FDNERBWWhBbDZwYXJIVnhqZzloNUtYYmFUZGhOb2lmcEFCCmo2Z29SQm56dEZIRmFlM0p2aW8wSWlDQ2thTUJDOGlDSlV4cFZEbWJjTVZxM0JETWN5Ty9rUTVkcjQzWThHMTAKUVZyZWU3ZkVvZDM0QWtJaVRXT1NpRmJiRHZHekM4cWFkcG5JNGNOd0tFSlVSbFNVTGtrUXdSOTF5dCtOM1ZMZwp3S3BELy9mblV3S0JnUUROK1JsSlVWOW4rc21oRGFjcFhpalNXZXpLNXMxL3FlWFdKcXp1U0Izc243RVI0MmkrCmM0TUduQm4ycytZN0NvRXdiamgyWXRhTUZNMk0wQUVpd2tvT2xxVnYxWmRXUEI3T3k0dXVaTUp3eGJGcjRWZW0KYWlTV2dMcXlGZXo0YWdCZFJmVDFhQkpJL1M0V0JyOTVrTmRjWHBRSW5US21VczV6bGs3cnREZWhjUUtCZ0VIcgpSSkswRjVXVWVtZDMzSkxsS1BNRnVXUUIvbU1XYzV1cmlXNEtua1QwVThsaVhHSENzN2tDZENSdjV6TXJ0a0F1Ci9jUkgvMjRXSVE5YURNWTlneE5NOEJsTUZJRWI5QWdNbEhCVlhZZVc5anFyREdiZTB3Z2J2d2dzdlJNRTZTY1QKelpidWphSnhPUGlZVEJqYXp4NnFIUXVDZ3psN2lRQ280Uk1EN2hXekFvR0JBTE1WZHRxQStOMzVoeXRBNXorUQpkeHdYelhIVXg0cUJZOHgrdnlHbkp6NHlRTDEvZ1ZNUldqRmN0QmhzOUo0UEZ0b3NhMWRqRzhTSTlqVktHS29QCmVZSExtZloxR25VQ2l6TWxIU01FVCszSVRVYnJjZkl0aDdqdkMwVkl1SXJZRGtrLzF3SElOWnJZL0xxWVR2ckwKTnFTZ09FRGdmbHJPRjlUVWNlanlyOHNxCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
        tlsCa: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lVVHN5WmFPenJuTXQxbU02bUxKaFVjNHRYejFZd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRnd05ETTFNekphRncwek1qQTRNVFV3TkRNMU16SmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2NtcHNIY1RBbjdVMGkrKzVvajdpZTZGYnlWUFdmQzFvKwoyVkM5ZWlSaHpPYUNrWittdm5Qd3NzdDI3c3FSWGNMKzFxaUpja1BndlNTSUNtemVrekp5NERqSzJzYUMyditoCm5iY25EMlUrVDJJM0E2SFBpaDB4NWhrU2ozQVNxRjNHbGpmbHVoU3RadGZpSGdoUFc4eDVkdFZiQzNoMDRabG4KeTUzNllkKzMrZGV0MHU0Z2pTY2hraFo4MTFab2NFRUVhc0tOeC9DaEUyNG0yRS9LaHRidkRmeGhrKzZhZTdpaApHTGg2amtheVh1VHNNeFg3ZE85N3NLOE9aejBFN0NlN1BQTldYU0VORk04ZGRPaDd0NlpTTG5xaWI2a2tOWWV6CldqYXR2d3JLVFFzTnZkNzdhRk53RW9oMklMYnVjczdTVmNUdyt4RDhnUFN6cUZvWTN4VkZBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJUc1AyWlJEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQWZCZ05WSFNNRUdEQVdnQlRzUDJaUgpEa2FaM3ZONHhpQXI3eUdvbFNVL0FqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFmSC9ReGM0ako0b1NSUjFMb2dPVHZxOWxqVC9sS2xFdm0rTWQ2NGNiUUNQeE9Pd0ppQ0dxbDZ3Y2QKSzNPUXZmbFZ6NkdGY0NZUE91b2hDdkhBRmhkVWkxZExIbFVBRHpkNUw4RnNmbFJYdExqQVQ2SWhUemJlb0tzQgpHVWVSaGNrNmlORkVaWUp4NEtMSEJQSG0yRzd3U3Bnb0pqbHp5a1d4Zm14RHlRSUh4WG5NNGZjSm1XT2tYajJpCkNXcm9wSUNtVHFIYy9rdnpIK0t4Z3h1YitLTko4UGd4UWhMNzNWVzZpd2RaYmRkVVVwUUNLTDg1TWRxUy9rdXMKT0kwNjNnZjBkY1VNazNvMFV2d1ZUSURUUStJcmwyM3poWlhZY1ZNdkRSOHROMkNRbjVyYXR5ZkxuYXhxZGdtOApiSGJsS2dRU2ZnL25yajE2Q0ROWnNsS0pHcCtCCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
