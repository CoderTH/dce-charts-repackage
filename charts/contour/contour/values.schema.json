{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "global": {
      "type": "object",
      "title": "Global Settings",
      "properties": {
        "imageRegistry": {
          "type": "string",
          "title": "Global Image Registry",
          "default": "",
          "description": "Replace the default image repository"
        }
      }
    },
    "contour": {
      "type": "object",
      "title": "Contour Settings",
      "properties": {
        "contour": {
          "type": "object",
          "title": "Contour Controller",
          "properties": {
            "manageCRDs": {
              "type": "boolean",
              "title": "Manage CRDs",
              "description": "Manage the creation, upgrade and deletion of Contour CRDs",
              "default": true
            },
            "replicaCount": {
              "type": "integer",
              "title": "Controller Replica Count",
              "default": 1
            },
            "ingressClass": {
              "type": "object",
              "title": "IngressClass",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "IngressClass Name",
                  "default": "contour"
                },
                "default": {
                  "type": "boolean",
                  "title": "Default IngressClass",
                  "description": "Is this the default ingressClass for the cluster.",
                  "default": false
                }
              }
            },
            "debug": {
              "type": "boolean",
              "title": "Enable Debug Log",
              "default": false
            }
          }
        },
        "envoy": {
          "type": "object",
          "title": "Envoy Settings",
          "description": "envoy is a datapath component to implement ingress",
          "properties": {
            "replicaCount": {
              "type": "integer",
              "title": "Envoy Replica Count",
              "default": 2
            },
            "kind": {
              "type": "string",
              "title": "Envoy Deploy Kind",
              "description": "envoy component could be deployed with several ways",
              "enum": [
                "deployment",
                "daemonset"
              ],
              "default": "deployment"
            },
            "hostNetwork": {
              "type": "boolean",
              "title": "Enable HostNetwork",
              "description": "envoy pod works as hostNetwork mode",
              "default": false
            },
            "logLevel": {
              "type": "string",
              "title": "Envoy Access Log Level",
              "enum": [
                "info",
                "error",
                "disabled"
              ],
              "default": "info"
            },
            "service": {
              "type": "object",
              "title": "Envoy Service",
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Service Type",
                  "enum": [
                    "LoadBalancer",
                    "NodePort",
                    "ClusterIP"
                  ],
                  "default": "NodePort"
                },
                "ipFamilyPolicy": {
                  "type": "string",
                  "title": "IP Family Policy",
                  "enum": [
                    "SingleStack",
                    "PreferDualStack",
                    "RequireDualStack"
                  ],
                  "default": "PreferDualStack"
                },
                "externalTrafficPolicy": {
                  "type": "string",
                  "title": "External Traffic Policy",
                  "description": "Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints. There are two available options: Cluster (default) and Local. ",
                  "enum": [
                    "Cluster",
                    "Local"
                  ],
                  "default": "Cluster"
                }
              }
            },
            "affinity": {
              "type": "object",
              "title": " ",
              "properties": {
                "nodeAffinity": {
                  "type": "object",
                  "title": "Envoy Node Affinity",
                  "properties": {
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                      "type": "array",
                      "title": "Preferred During Scheduling Ignored During Execution",
                      "items": {
                        "type": "object",
                        "properties": {
                          "preference": {
                            "type": "object",
                            "title": "Preference",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "title": "Match Expressions",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "title": "Node Label"
                                    },
                                    "operator": {
                                      "type": "string",
                                      "title": "Operator",
                                      "enum": [
                                        "In",
                                        "NotIn",
                                        "Exists",
                                        "DoesNotExist",
                                        "Gt",
                                        "Lt"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "weight": {
                            "type": "integer",
                            "title": "Weight"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "metrics": {
          "type": "object",
          "title": "Metrics",
          "properties": {
            "serviceMonitor": {
              "type": "object",
              "title": "ServiceMonitor",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "title": "Install",
                  "description": "install serviceMonitor CR for contour. Notice: It is required to install Prometheus CRDs firstly",
                  "default": false
                }
              }
            }
          }
        }
      }
    },
    "alert": {
      "type": "object",
      "title": "Alert Configurations",
      "properties": {
        "prometheusRule": {
          "type": "object",
          "properties": {
            "create": {
              "title": "Install",
              "type": "boolean",
              "description": "install prometheusRule CR for contour. Notice: It is required to install Prometheus CRDs firstly",
              "default": false
            }
          },
          "title": "Prometheus Rule"
        }
      }
    }
  }
}