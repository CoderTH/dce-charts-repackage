#!/bin/bash

CHART_DIRECTORY=$1
[ ! -d "$CHART_DIRECTORY" ] && echo "custom shell: error, miss CHART_DIRECTORY $CHART_DIRECTORY " && exit 1

cd $CHART_DIRECTORY
echo "custom shell: CHART_DIRECTORY $CHART_DIRECTORY"
echo "CHART_DIRECTORY $(ls)"

#===============================
echo "inject tls to values.yaml"
TLS_CA=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRVENDQWltZ0F3SUJBZ0lVSFAydW0yV2NUUUZoUmFLdmpObUN2bEl0UzQwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRZd09ETXhOVE5hRncwek1qQTRNVE13T0RNeE5UTmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3o3RWdVWjM1N3VGWDlFR2RjY0V2YVJEalZIZmtzUU5qMgo2RFV1TmNiM3A2MzVLdGFTS3htOFBLKy9zQUhTK2NjcmJ4ZW5odUdpNnE4cERjMXVQYVNwckFDTFZXZTF1NnVaCnA4T1BLd3JTcStTang3YlR1N25wYUN1MkpRZzBrc09OMmY0WlRiM1I0ZnM2Y1U3VFkvbTJiYTQ1amo0cFVkbDAKYWlLRDR6SlZVU2FKMWMvTEJFQ3J6Sjh4S24zdWs0OWNPWGE3azQvR2QveWM1SndGL0dSeHQ1MUZCbkgyRWtyYgpJWjVlWm00M1FnaDNJK2QxNjhYbEN5aFRPbnpXUzl2L1B1SDZjd1pFQWpqZlZDR0dLUjNyK1lPdkhpaFhPaDQ0CjBOVDJNNDVvbkJCc3J6aTlYYU53dzZXN0JiV1l4SjlsZEtLWHEvQTAyVG5INmlIbE8yUmxBZ01CQUFHalV6QlIKTUIwR0ExVWREZ1FXQkJSSDMzZnd3bVdQTWZ0MEN0YUduMG91VGJSQlB6QWZCZ05WSFNNRUdEQVdnQlJIMzNmdwp3bVdQTWZ0MEN0YUduMG91VGJSQlB6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUJ4eHJ6Nks0YWxUM0FKMmE1V1NjWW1KNzNiWG1pNXk4REhSNmpJUFhFdW81a3NGcktQQUtmNFMwelcKa1l3T3RFRjZKZnJZbG1QYndmS2R5SnN6dzI5SlZERm1BRGlCdDZjV1FZTTdra2gydXAxTW1zcCtLaVVmRG5zWgo3WlpMMXlxcnM0aUJvTkZiS3FuSDd1bW9qRWtXc3E3NkFzMTU4ZEYwclpMWkhNb0RlMFdwTjZ1QlAydm5DTW1lCnlEdHFjSFhKSkx1VWNNRExVd3N4MmZlN0pTcHdXa2NQaHIyMmV3TnNIWG50UTZKRk9NTjNTV2lOaC9MdTVFQUUKOHlUZXBTVzgrWEwyb2pzR3NCbFludVpPWjM5eVkzVktCSE1CLzlCcGZDSkx3T2tQWWZtT2ZvZXcwTE02RElzawp5Y1U3YS9vZVFQTERCOVNOOStpbzA4azJvcEh3Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
TLS_CERT=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVEekNDQXZlZ0F3SUJBZ0lVUyswSVJ5bFlucjJOUWRwQ2x4bkkybGxEMmo4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERXVNQ3dHQTFVRUF3d2xjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5TG10MVltVXRjM2x6ZEdWdApMbk4yWXpBZUZ3MHlNakE0TVRZd09ETXhOVE5hRncwek1qQTRNVE13T0RNeE5UTmFNREF4TGpBc0JnTlZCQU1NCkpYTndhV1JsY25CdmIyd3RZMjl1ZEhKdmJHeGxjaTVyZFdKbExYTjVjM1JsYlM1emRtTXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2xLZ01ZL1IrZ0hpRzFRQ29vdkFiQlAyOTl0VkRHbzB3VwpTZDVISU5GN2x6bndOV2w3U0dRY2R3WlY1VXdYUDZOaFBuWFdDeGxraWlpQXFmd2lKK0VpemVBaU9PYWh6ZHRrClpHTW1FRElmUnlsNXV2UEZyc0lqelZMSUtLaEhqVGtYekVwTEpmUXVkNVJVV2FwNkpDcHc2VXdMaW03Y2YwbU8KdC9hVWFFZDdHUlM1QUIvbWxaSjRLb1hCVW1WRjl2U1c0ajFxYVB2YXNxa0JDaWwwS3ZPS2N0dG1McjRIajg5WApLTThvdVVGU1RUMERYVUNxT283SUVmTm56Y1R3aHNIUUwwVElwOWFWSk41bEZXR0ppbGpKd0ZMdmdWcW1rOS9yCmxMTzcwbzNmTCtaSlIwRXRTaHFRYWM5T1lZSFBiL0plV0JZbHhQdGJERnpXMS9nVXJDNlhBZ01CQUFHamdnRWYKTUlJQkd6QUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBZ1lJS3dZQkJRVUhBd0V3Z2FFR0ExVWRFUVNCbVRDQmxvSVZjM0JwWkdWeWNHOXZiQzFqYjI1MGNtOXNiR1Z5CmdpRnpjR2xrWlhKd2IyOXNMV052Ym5SeWIyeHNaWEl1YTNWaVpTMXplWE4wWlcyQ0pYTndhV1JsY25CdmIyd3QKWTI5dWRISnZiR3hsY2k1cmRXSmxMWE41YzNSbGJTNXpkbU9DTTNOd2FXUmxjbkJ2YjJ3dFkyOXVkSEp2Ykd4bApjaTVyZFdKbExYTjVjM1JsYlM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBZEJnTlZIUTRFRmdRVWx2V3hzalI3CjQ4b3lDbzFVSFlNQTFOSUUxWjB3SHdZRFZSMGpCQmd3Rm9BVVI5OTM4TUpsanpIN2RBcldocDlLTGsyMFFUOHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZhVFp1RWVMQ3lqNGZLdUhCU2Rtc2t4STJ0MXpXQTZHSnU5R2c2agp6UkNJRWtralhIMUF1K1N6dmY4Q0ZnVEx5NFRaZmNaK3FVYmRCTUlYNVdCYUpRc3AwdjA5V2RwVVp4aUd4NWN4CkpIakg0eG5SWFI2SjUxajBJeGIzcE5zNmRjanlKUTBtNjE3eUVlVFh0YkM1OFROcWw0b200dDZORlYweURpWGoKNVE3b0s3RXlBcTVlT3lacEhKV3N4aUhQWGlOWmFlVDhiMWN6aGo0UWZmNnlyaWFPUjMza21hRVhOaERIeDcwcQp2ZUsvVEM3OG1zcVdmOUY0dDR4amRZVS8ybGFXYVdEWXdtcy9Ecjd4NitITGYrVUVLY0lFT3ZYYmEzdzJnYkFLCi9WazBxVHZFSzY5elh2bHFvU2xBWGErWFNVYzRGVlRFTm9oS2MwalRiTHZoQkJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
TLS_KEY=LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ2xLZ01ZL1IrZ0hpRzEKUUNvb3ZBYkJQMjk5dFZER28wd1dTZDVISU5GN2x6bndOV2w3U0dRY2R3WlY1VXdYUDZOaFBuWFdDeGxraWlpQQpxZndpSitFaXplQWlPT2FoemR0a1pHTW1FRElmUnlsNXV2UEZyc0lqelZMSUtLaEhqVGtYekVwTEpmUXVkNVJVCldhcDZKQ3B3NlV3TGltN2NmMG1PdC9hVWFFZDdHUlM1QUIvbWxaSjRLb1hCVW1WRjl2U1c0ajFxYVB2YXNxa0IKQ2lsMEt2T0tjdHRtTHI0SGo4OVhLTThvdVVGU1RUMERYVUNxT283SUVmTm56Y1R3aHNIUUwwVElwOWFWSk41bApGV0dKaWxqSndGTHZnVnFtazkvcmxMTzcwbzNmTCtaSlIwRXRTaHFRYWM5T1lZSFBiL0plV0JZbHhQdGJERnpXCjEvZ1VyQzZYQWdNQkFBRUNnZ0VBSzR5NjJWMXc5OWJLRzVFcUxLaDdmWHdkQ1VBRVp3UUszWHVueFFpRncvbFoKbVJsMFVVSUN4N0NvdG9CcUFsMVExcVRTREZqTDNzTkJMNy9pa0IwRTA1a0dadStxL0hJYnpjcGNqRjVMNFF4eQpCcnVCYUpnT2I4TkZkeXFsU0l5WHg4c2hzZFAxb1VUOWt3bzdsYzR3ZEtwSFYybXVscXhuZUY3UWdVeEh3TkNzCjIvSmExRUhxMUZlWGtGRVE4bCtMeFdCY2hFdnpGNXN0Tng4TTdJYXFyY2RoU05pT2hXdVJOTU5CRXRWd3BJeEwKM0JCejYvaHZ0SWZXU2c2c2d0aU1rZjE3cHo5V05wSlVXRjhuQUJHSUZKNmhvQjQvRDdxSHZGYmtMZ2VKaXJ6YQptTFN2a0NCOERuMGJyV2tlSnJuaHdSYWxyenVzTHF3Si8zTC9QK2owblFLQmdRRGdEK1hTRVE3akE5MFpkTm1OCjF4N2JVcXNDY3RHc0tNUXJYTU5jVVdDYVB3ZG4vNkcyc2NZWTZKN2pPdlBvWkN0T0xScVdqMVRYUmlJQ1o1WnMKQktEQUpqUGMzZW1MZy9ibmhjeiszcDd5UTZqd0Qxdy9wSEFWOUJ1SmdwZ1pxYXdzUGltYlJOUzNSa1pxc2YzNwo4K0ZxN0UrYk5ITzlYSmNKZXh3dTRMS05IUUtCZ1FDOHRPZ1o5YmkyVnRLdUNmWC9PYTdOTEd3QU1qWkxKVzJRClZ5Z0dGTTNtdHFyb1FySHRCSWViNVBOalBES3pPMEhVWnhwN0RGM1VTdHRVY2Foc3J2N2hqNFhVVlNlOE5wMW8KSTlnQllOamRrQU9MejdtZjNUaVM5SlVtSnBpVlg5Yyt5MVFLNHJ0cHFRSFVISENnRXZKL01idVZCbS8zN0pxTApVOGM5N3pKQVF3S0JnQWM3SEJ5YVpsT1hOVlJ6KysxaTZ1RURHdmU2UXQvK2RNNDljU1NTajc2S21DK1lCVjBECkFiU2VGVHFhRlhNRGdJNUdVRnhaaGRCb3VBSkIyNDNpM0ZrM0ltZFhWZ2tsbWh0QXF5dnlmVWl1UEU1N0FHd2gKWDJpbDl4bUorR1Nqb0NYUlg4QmVDVXRjM2pybFFhQVc3OGhtbGU4WlV6N2lOUkdlUW51VXpzNVZBb0dBRm1xQworN3AxczZ0Q29ZdnJYZU1UUWFvYU5qZkF2VkozM21LTURaVGhGSnYwVjF5ODJBUG11LzBKY0d0Uk5ucytpYVdwCnZwNHNjekJsTjNXODVSUXdrTWpFeEFGTmxBMEV5NzhlUktPbGYwUkJONVY0WG1ZZjkwejRmcXl0Q1dsMkh5NTIKRUVqNHJFZDRRU01UdWVBbVVEZXZLYmUzQzBOZTVGZ1NYZWdSRnhNQ2dZQjlOdFRnd3NHcGZkSFcwMlpjMGk5Tgo2cjhuSWIwbTg2Z2dGNVVzNGNpaHRqU0xNblg4TWZsVkl3cEtzTVZOblZaWTBLblZzNS9WeGIvaGtwbTFNaXFwCkxjbnpmeFNXMFR5dFdGNjJKM2VSK2ZlRktNLzBvSks4c2ZVc2pDQ3dvS0RsaXd0OFZCeVBYclpsTGtzNk9vSnoKZ2c5R3ZCL3o3cVlYL21MNmoyVkRwZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

sed -i -E 's/tlsCert.*/tlsCert: "'${TLS_CERT}'"/'  values.yaml
sed -i -E 's/tlsCa.*/tlsCa: "'${TLS_CA}'"/'  values.yaml
sed -i -E 's/tlsKey.*/tlsKey: "'${TLS_KEY}'"/'  values.yaml
